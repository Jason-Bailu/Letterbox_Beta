{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from 'echarts';\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      like: true,\n      value1: 4154.564,\n      value2: 2222,\n      title: '今年的增长',\n      fileList: [],\n      srcList: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  mounted() {\n    this.initChart1();\n    this.initChart2();\n  },\n  methods: {\n    load() {\n      this.axios.get(\"/banner/all\").then(res => {\n        let result = res.data;\n        if (result.code === 'C200') {\n          this.fileList = result.data;\n          this.fileList.forEach(item => {\n            this.srcList.push(item.url);\n          });\n        } else {\n          this.$message.error(result.msg);\n        }\n      }).catch(error => {\n        console.log(error.response.data);\n      });\n    },\n    initChart1() {\n      let myChart = echarts.init(this.$refs.myEchart1);\n      let option = {\n        xAxis: {\n          type: 'category',\n          data: [1, 2, 3, 4, 5, 6, 7]\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [150, 230, 224, 218, 135, 147, 260],\n          type: 'line'\n        }]\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function () {\n        myChart.resize();\n      });\n    },\n    initChart2() {\n      let myChart = echarts.init(this.$refs.myEchart2);\n      let option = {\n        title: {\n          text: 'Referer of a Website',\n          subtext: 'Fake Data',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: '50%',\n          data: [{\n            value: 1048,\n            name: 'Search Engine'\n          }, {\n            value: 735,\n            name: 'Direct'\n          }, {\n            value: 580,\n            name: 'Email'\n          }, {\n            value: 484,\n            name: 'Union Ads'\n          }, {\n            value: 300,\n            name: 'Video Ads'\n          }],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function () {\n        myChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","like","value1","value2","title","fileList","srcList","created","load","mounted","initChart1","initChart2","methods","axios","get","then","res","result","code","forEach","item","push","url","$message","error","msg","catch","console","log","response","myChart","init","$refs","myEchart1","option","xAxis","type","yAxis","series","setOption","window","addEventListener","resize","myEchart2","text","subtext","left","tooltip","trigger","legend","orient","radius","value","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor"],"sources":["src/views/chartview/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic group-separator=\",\" :precision=\"2\" :value=\"value2\" :title=\"title\"></el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic title=\"男女比\">\n            <template slot=\"formatter\"> 456/2 </template>\n          </el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic group-separator=\",\" :precision=\"2\" decimal-separator=\".\" :value=\"value1\" :title=\"title\">\n            <template slot=\"prefix\">\n              <i class=\"el-icon-s-flag\" style=\"color: red\"></i>\n            </template>\n            <template slot=\"suffix\">\n              <i class=\"el-icon-s-flag\" style=\"color: blue\"></i>\n            </template>\n          </el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic :value=\"like ? 521 : 520\" title=\"Feedback\">\n            <template slot=\"suffix\">\n              <span @click=\"like = !like\" class=\"like\">\n                <i class=\"el-icon-star-on\" style=\"color:red\" v-show=\"!!like\"></i>\n                <i class=\"el-icon-star-off\" v-show=\"!like\"></i>\n              </span>\n            </template>\n          </el-statistic>\n        </div>\n      </el-col>\n    </el-row>\n    <el-divider><i class=\"el-icon-loading\"></i></el-divider>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <el-carousel indicator-position=\"outside\" height=\"60vh\" style=\"border-radius: 10px;\">\n          <el-carousel-item v-for=\"item in fileList\" :key=\"item.id\">\n            <el-image \n              style=\"width: 100%; height: 60vh\"\n              :src=\"item.url\"\n              fit=\"fill\"\n              :preview-src-list=\"srcList\">\n            </el-image>\n          </el-carousel-item>\n        </el-carousel>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-row>\n          <div ref=\"myEchart1\" style=\"width: 100%; height: 30vh;\"></div>\n        </el-row>\n        <el-divider></el-divider>\n        <el-row>\n          <div ref=\"myEchart2\" style=\"width: 100%; height: 30vh;\"></div>\n        </el-row>\n      </el-col>\n    </el-row>\n    <el-divider><i class=\"el-icon-star-off\"></i></el-divider>\n    <el-row :gutter=\"10\">\n      <el-col :span=\"12\"><el-link href=\"https://github.com/JasonD0216\" icon=\"el-icon-star-on\"> Github </el-link></el-col>\n      <el-col :span=\"12\"><el-link href=\"https://www.bailublog.cn\" type=\"primary\" icon=\"el-icon-link\"> Blog </el-link></el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: \"HomeView\",\n  data() {\n    return {\n      like: true,\n      value1: 4154.564,\n      value2: 2222,\n      title: '今年的增长',\n      fileList: [],\n      srcList: []\n    }\n  },\n  created() {\n    this.load();\n  },\n  mounted() {\n    this.initChart1();\n    this.initChart2();\n  },\n  methods: {\n    load() {\n      this.axios.get(\"/banner/all\").then(res => {\n        let result = res.data;\n        if (result.code === 'C200') {\n          this.fileList = result.data;\n          this.fileList.forEach(item => {\n            this.srcList.push(item.url);\n          })\n        } else {\n          this.$message.error(result.msg);\n        }\n      }).catch(error => {\n        console.log(error.response.data);\n      })\n    },\n    initChart1() {\n      let myChart = echarts.init(this.$refs.myEchart1)\n      let option = {\n        xAxis: {\n          type: 'category',\n          data: [1, 2, 3, 4, 5, 6, 7]\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            data: [150, 230, 224, 218, 135, 147, 260],\n            type: 'line'\n          }\n        ]\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function() {\n        myChart.resize();\n      });\n    },\n    initChart2() {\n      let myChart = echarts.init(this.$refs.myEchart2)\n      let option = {\n        title: {\n          text: 'Referer of a Website',\n          subtext: 'Fake Data',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [\n          {\n            name: 'Access From',\n            type: 'pie',\n            radius: '50%',\n            data: [\n              { value: 1048, name: 'Search Engine' },\n              { value: 735, name: 'Direct' },\n              { value: 580, name: 'Email' },\n              { value: 484, name: 'Union Ads' },\n              { value: 300, name: 'Video Ads' }\n            ],\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function() {\n        myChart.resize();\n      });\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";AAyEA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,MAAA;MACAC,MAAA;MACAC,KAAA;MACAC,QAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAJ,KAAA;MACA,KAAAK,KAAA,CAAAC,GAAA,gBAAAC,IAAA,CAAAC,GAAA;QACA,IAAAC,MAAA,GAAAD,GAAA,CAAAhB,IAAA;QACA,IAAAiB,MAAA,CAAAC,IAAA;UACA,KAAAb,QAAA,GAAAY,MAAA,CAAAjB,IAAA;UACA,KAAAK,QAAA,CAAAc,OAAA,CAAAC,IAAA;YACA,KAAAd,OAAA,CAAAe,IAAA,CAAAD,IAAA,CAAAE,GAAA;UACA;QACA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAP,MAAA,CAAAQ,GAAA;QACA;MACA,GAAAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAC,GAAA,CAAAJ,KAAA,CAAAK,QAAA,CAAA7B,IAAA;MACA;IACA;IACAU,WAAA;MACA,IAAAoB,OAAA,GAAAhC,OAAA,CAAAiC,IAAA,MAAAC,KAAA,CAAAC,SAAA;MACA,IAAAC,MAAA;QACAC,KAAA;UACAC,IAAA;UACApC,IAAA;QACA;QACAqC,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACAtC,IAAA;UACAoC,IAAA;QACA;MAEA;MACAN,OAAA,CAAAS,SAAA,CAAAL,MAAA;MACAM,MAAA,CAAAC,gBAAA;QACAX,OAAA,CAAAY,MAAA;MACA;IACA;IACA/B,WAAA;MACA,IAAAmB,OAAA,GAAAhC,OAAA,CAAAiC,IAAA,MAAAC,KAAA,CAAAW,SAAA;MACA,IAAAT,MAAA;QACA9B,KAAA;UACAwC,IAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAC,MAAA;UACAJ,IAAA;QACA;QACAR,MAAA,GACA;UACAvC,IAAA;UACAqC,IAAA;UACAe,MAAA;UACAnD,IAAA,GACA;YAAAoD,KAAA;YAAArD,IAAA;UAAA,GACA;YAAAqD,KAAA;YAAArD,IAAA;UAAA,GACA;YAAAqD,KAAA;YAAArD,IAAA;UAAA,GACA;YAAAqD,KAAA;YAAArD,IAAA;UAAA,GACA;YAAAqD,KAAA;YAAArD,IAAA;UAAA,EACA;UACAsD,QAAA;YACAC,SAAA;cACAC,UAAA;cACAC,aAAA;cACAC,WAAA;YACA;UACA;QACA;MAEA;MACA3B,OAAA,CAAAS,SAAA,CAAAL,MAAA;MACAM,MAAA,CAAAC,gBAAA;QACAX,OAAA,CAAAY,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}