{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport MainView from \"@/views/MainView\";\nimport AboutView from \"@/views/AboutView\";\nimport LoginView from \"@/views/LoginView\";\nimport RegisterView from \"@/views/RegisterView\";\nimport { getToken } from '@/utils/auth';\nimport store from '@/store';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: '首页',\n  component: MainView,\n  children: []\n}, {\n  path: '/about',\n  name: '关于',\n  component: AboutView\n}, {\n  path: '/login',\n  name: '登录',\n  component: LoginView\n}, {\n  path: '/register',\n  name: '注册',\n  component: RegisterView\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n//动态绑定路由\nconst bindRoute = menus => {\n  let newRoutes = routes;\n  menus.forEach(menu => {\n    if (menu.children) {\n      menu.children.forEach(m => {\n        let route = menuToRoute(m, menu.menuName);\n        if (route) {\n          newRoutes[0].children.push(route);\n        }\n      });\n    }\n  });\n  //重新添加到路由\n  newRoutes.forEach(route => {\n    router.addRoutes(route);\n  });\n};\n\n//菜单转路由\nconst menuToRoute = (menu, parentName) => {\n  if (!menu.component) {\n    return null;\n  } else {\n    let route = {\n      name: menu.menuName,\n      path: menu.path,\n      meta: {\n        parentName: parentName\n      }\n    };\n    route.component = () => import(menu.component);\n    return route;\n  }\n};\nrouter.beforeEach((to, from, next) => {\n  const whiteList = ['/login', '/register'];\n  let token = getToken();\n  let hasRoutes = store.state.hasRoutes;\n  let menus = store.getters.GET_MENUS;\n  if (token) {\n    if (!hasRoutes) {\n      bindRoute(menus);\n      store.commit(\"set_routes_state\", true);\n    }\n    next();\n  } else {\n    if (whiteList.includes(to.path)) {\n      next();\n    } else {\n      next('/login');\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","MainView","AboutView","LoginView","RegisterView","getToken","store","use","routes","path","name","component","children","router","mode","base","process","env","BASE_URL","bindRoute","menus","newRoutes","forEach","menu","m","route","menuToRoute","menuName","push","addRoutes","parentName","meta","beforeEach","to","from","next","whiteList","token","hasRoutes","state","getters","GET_MENUS","commit","includes"],"sources":["/Users/jason/Downloads/project/LetterBox/letterbox-admin/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport MainView from \"@/views/MainView\"\nimport AboutView from \"@/views/AboutView\"\nimport LoginView from \"@/views/LoginView\"\nimport RegisterView from \"@/views/RegisterView\";\nimport { getToken } from '@/utils/auth';\nimport store from '@/store';\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: '首页',\n    component: MainView,\n    children: [\n      \n    ]\n  },\n  {\n    path: '/about',\n    name: '关于',\n    component: AboutView\n  },\n  {\n    path: '/login',\n    name: '登录',\n    component: LoginView\n  },\n  {\n    path: '/register',\n    name: '注册',\n    component: RegisterView\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\n//动态绑定路由\nconst bindRoute = (menus) => {\n  let newRoutes = routes;\n  menus.forEach(menu => {\n    if (menu.children) {\n      menu.children.forEach(m => {\n        let route = menuToRoute(m, menu.menuName);\n        if (route) {\n          newRoutes[0].children.push(route);\n        }\n      })\n    }\n  })\n  //重新添加到路由\n  newRoutes.forEach(route => {\n    router.addRoutes(route);\n  })\n}\n\n//菜单转路由\nconst menuToRoute = (menu, parentName) => {\n  if (!menu.component) {\n    return null;\n  } else {\n    let route = {\n      name: menu.menuName,\n      path: menu.path,\n      meta: {\n        parentName: parentName\n      }\n    }\n    route.component = () => import(menu.component);\n    return route;\n  }\n}\n\nrouter.beforeEach((to, from, next) => {\n  const whiteList = ['/login', '/register'];\n  let token = getToken();\n  let hasRoutes = store.state.hasRoutes;\n  let menus = store.getters.GET_MENUS;\n  if (token) {\n    if (!hasRoutes) {\n      bindRoute(menus);\n      store.commit(\"set_routes_state\", true);\n    }\n    next();\n  } else {\n    if (whiteList.includes(to.path)) {\n      next();\n    } else {\n      next('/login');\n    }\n  }\n})\n\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}